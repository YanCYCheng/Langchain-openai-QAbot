# Step1 installation
pip install langchain==0.0.147
pip install openai==0.27.4
pip install chromadb==0.3.29
pip install jieba
pip install unstructured
pip install tiktoken

# Step2 mkdir and load some txt
# source_doc and persist_doc

# Step3 docsearch
import os
from langchain.document_loaders import DirectoryLoader
from langchain.text_splitter import CharacterTextSplitter
from langchain.embeddings.openai import OpenAIEmbeddings
from langchain.vectorstores import Chroma
from langchain.chains import RetrievalQA
source_documents_dir = "/Users/yancycheng/yandoc/mybook"
persist_directory = "/Users/yancycheng/yandoc/persist"
loader = DirectoryLoader(source_documents_dir, glob="*.txt")
documents = loader.load()
print(f"Load documents done, count: {len(documents)}")
text_splitter = CharacterTextSplitter(chunk_size=100, chunk_overlap=0)
split_docs = text_splitter.split_documents(documents)
print(f"Split documents done, split_docs.count: {len(split_docs)}")
os.environ["OPENAI_API_KEY"] = "sk-mykey"
embeddings = OpenAIEmbeddings(max_retries=10)
docsearch = Chroma.from_documents(split_docs,embeddings,persist_directory=persist_directory)


#Step4 Query
from langchain.embeddings.openai import OpenAIEmbeddings
from langchain import OpenAI
from langchain.vectorstores import Chroma
from langchain.chains import RetrievalQA
import os
os.environ["OPENAI_API_KEY"] = "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"
persist_directory = "/Users/yancycheng/yandoc/persist"
embeddings = OpenAIEmbeddings(max_retries=10)
docsearch = Chroma(persist_directory=persist_directory, embedding_function=embeddings)
qa = RetrievalQA.from_chain_type(llm=OpenAI(), chain_type="stuff", retriever=docsearch.as_retriever())
while True:
    try:
        query = input("Your Question：")
        if not query:
            print("Please input your question：")
            continue
        if query == "exit":
            print("Quit")
            break
        
        query = query.encode("utf-8").decode("utf-8")
        result = qa.run(query)
    except UnicodeDecodeError as e:
        print("UnicodeDecodeError: ", e)
        continue
    print(result)




